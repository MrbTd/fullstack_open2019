{"ast":null,"code":"var _jsxFileName = \"/Users/eashin/Documents/fullstack_open2019/part2/course-contents/src/components/Course.js\";\nimport React from \"react\";\n\nconst Header = ({\n  course\n}) => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 3\n  },\n  __self: this\n}, course);\n\nconst Part = ({\n  part,\n  exercises\n}) => React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, part, \" \", exercises);\n\nconst Content = ({\n  parts\n}) => parts.map(part => React.createElement(Part, {\n  key: part.name,\n  part: part.name,\n  exercises: part.exercises,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}));\n\nconst Exercise = ({\n  allExe\n}) => {\n  const allExercises = allExe.reduce((sum, count) => {\n    console.log(\"what is happening\", sum, count);\n    return sum + count.exercises;\n  }, 0);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Total of \", allExercises, \" exercises\"));\n};\n\nconst Course = ({\n  course\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Header, {\n    course: course.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(Content, {\n    parts: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Exercise, {\n    allExe: course.parts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }));\n};\n\nexport default Course;","map":{"version":3,"sources":["/Users/eashin/Documents/fullstack_open2019/part2/course-contents/src/components/Course.js"],"names":["React","Header","course","Part","part","exercises","Content","parts","map","name","Exercise","allExe","allExercises","reduce","sum","count","console","log","Course"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKA,MAAL,CAA/B;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,IADH,OACUC,SADV,CADF;;AAMA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACdA,KAAK,CAACC,GAAN,CAAUJ,IAAI,IACZ,oBAAC,IAAD;AAAM,EAAA,GAAG,EAAEA,IAAI,CAACK,IAAhB;AAAsB,EAAA,IAAI,EAAEL,IAAI,CAACK,IAAjC;AAAuC,EAAA,SAAS,EAAEL,IAAI,CAACC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;;AAKA,MAAMK,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC/B,QAAMC,YAAY,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACjDC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,GAAjC,EAAsCC,KAAtC;AACA,WAAOD,GAAG,GAAGC,KAAK,CAACV,SAAnB;AACD,GAHoB,EAGlB,CAHkB,CAArB;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAkBO,YAAlB,eADF,CADF;AAKD,CAVD;;AAWA,MAAMM,MAAM,GAAG,CAAC;AAAEhB,EAAAA;AAAF,CAAD,KAAgB;AAC7B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,MAAM,CAACO,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEP,MAAM,CAACK,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEL,MAAM,CAACK,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CARD;;AASA,eAAeW,MAAf","sourcesContent":["import React from \"react\";\n\nconst Header = ({ course }) => <h1>{course}</h1>;\n\nconst Part = ({ part, exercises }) => (\n  <p>\n    {part} {exercises}\n  </p>\n);\n\nconst Content = ({ parts }) =>\n  parts.map(part => (\n    <Part key={part.name} part={part.name} exercises={part.exercises} />\n  ));\n\nconst Exercise = ({ allExe }) => {\n  const allExercises = allExe.reduce((sum, count) => {\n    console.log(\"what is happening\", sum, count);\n    return sum + count.exercises;\n  }, 0);\n  return (\n    <p>\n      <strong>Total of {allExercises} exercises</strong>\n    </p>\n  );\n};\nconst Course = ({ course }) => {\n  return (\n    <div>\n      <Header course={course.name} />\n      <Content parts={course.parts} />\n      <Exercise allExe={course.parts} />\n    </div>\n  );\n};\nexport default Course;\n"]},"metadata":{},"sourceType":"module"}